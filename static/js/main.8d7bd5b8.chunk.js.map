{"version":3,"sources":["AddRecord/addRecord.js","ViewRecords/viewRecords.js","Utils/utilityFunctions.js","Home/home.js","Notifications/notifications.js","ErrorBoundary/errorboundary.js","PageNotFound/pagenotfound.js","EditRecord/editRecord.js","Login/login.js","SignIn/signin.js","PasswordReset/passwordreset.js","Routes/routes.js","App/app.js","index.js"],"names":["AddRecord","state","redirect","dashboardStmt","name","number","model","dateofinstallment","nextservicedate","address","getCurrentUser","e","firebase","auth","onAuthStateChanged","user","undefined","props","history","push","handleInputChange","persist","setState","target","value","validateInput","addRecord","preventDefault","window","confirm","firestore","collection","add","custName","custPhone","plantInstalled","dateOfInstallment","nextServiceDate","custAddress","then","alert","catch","error","console","this","to","className","id","htmlFor","type","placeholder","onChange","required","onClick","Component","withRouter","ViewRecords","records","recordsPresent","searchbox","searchOn","getData","db","recArr","get","querySnapshot","forEach","doc","idObj","obj","data","search","filter","item","String","toLowerCase","searchRecords","handleSearchBox","handleReset","editRecord","deleteRecord","delete","updatedRecords","recordMapper","map","index","key","feed","getToday","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Home","count","getNotificationCount","where","length","err","log","a1","find","playNotificationSound","audioRef","current","play","logoutUser","signOut","React","createRef","href","webkit-playsinline","playsInline","ref","src","Notification","snackBar","updateStatus","set","status","merge","updatedRecord","record","pop","feed2","Fragment","ErrorBoundary","hasError","errorInfo","children","PageNotFound","EditRecord","match","params","exists","rec","Login","authMessage","login","signInWithEmailAndPassword","email","password","res","localStorage","setItem","code","resetPassword","sendPasswordResetEmail","SignUp","signIn","createUserWithEmailAndPassword","message","PasswordReset","Routes","exact","path","render","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d7bd5b8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import firebase from 'firebase/app';\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport \"./addrecords.css\";\r\nclass AddRecord extends Component {\r\n  state = {\r\n    redirect: false,\r\n    dashboardStmt: \"< Go To Dashboard\",\r\n    name: null,\r\n    number: null,\r\n    model: null,\r\n    dateofinstallment: null,\r\n    nextservicedate: null,\r\n    address: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser(); //To verify Login\r\n  }\r\n\r\n  getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //To handle Input change // Value typed in input fields being recorded to state variables\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => {\r\n      return { [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  //Checking whether all required fields are added\r\n  validateInput = () => {\r\n    const {\r\n      name,\r\n      number,\r\n      model,\r\n      dateofinstallment,\r\n      nextservicedate,\r\n      address,\r\n    } = this.state;\r\n    if (\r\n      name !== null &&\r\n      number !== null &&\r\n      model !== null &&\r\n      dateofinstallment !== null &&\r\n      nextservicedate !== null &&\r\n      address !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //Add to database\r\n  addRecord = (e) => {\r\n    e.preventDefault();\r\n    if (this.validateInput()) {\r\n      if (window.confirm(\"Are you sure you want to add this Record?\")) {\r\n        var db = firestore();\r\n        db.collection(\"installations\")\r\n          .add({\r\n            custName: this.state.name,\r\n            custPhone: this.state.number,\r\n            plantInstalled: this.state.model,\r\n            dateOfInstallment: this.state.dateofinstallment,\r\n            nextServiceDate: this.state.nextservicedate,\r\n            custAddress: this.state.address,\r\n          })\r\n          .then(() => {\r\n            alert(\"Record Added Successfully..!\");\r\n            this.setState(\r\n              () => {\r\n                return { redirect: true };\r\n              },\r\n              () => {}\r\n            );\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error Adding Document: \", error);\r\n          });\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n      <div className=\"form\">\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{this.state.dashboardStmt}</button>\r\n          </Link>\r\n        </p>\r\n        <form>\r\n          <h2>Add New Record</h2>\r\n          <p htmlFor=\"name\">Customer Name:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Customer Name\"\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n            required\r\n          />\r\n          <p htmlFor=\"number\">Customer Contact Number:</p>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Customer Phone Number\"\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n            required\r\n          />\r\n          <p htmlFor=\"model\">Plant Installed:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Plant Model\"\r\n            onChange={this.handleInputChange}\r\n            name=\"model\"\r\n            required\r\n          />\r\n          <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Date of Installment\"\r\n            onChange={this.handleInputChange}\r\n            name=\"dateofinstallment\"\r\n            required\r\n          />\r\n          <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Next Service Date\"\r\n            onChange={this.handleInputChange}\r\n            name=\"nextservicedate\"\r\n            required\r\n          />\r\n          <p htmlFor=\"address\">Customer Address:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            onChange={this.handleInputChange}\r\n            name=\"address\"\r\n            required\r\n          />\r\n          <div></div>\r\n          <button type=\"submit\" onClick={this.addRecord}>\r\n            {\" \"}\r\n            Add New Record\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(AddRecord);","import React, { Component, Fragment } from \"react\";\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport \"./viewRecords.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport firebase from \"firebase\";\r\nclass ViewRecords extends Component {\r\n  state = {\r\n    records: [],\r\n    recordsPresent: false,\r\n    searchbox: \"\",\r\n    searchOn: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser();\r\n    this.getData();\r\n  }\r\n\r\n  getCurrentUser = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //Get all records of installations\r\n  getData = () => {\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return { records: recArr, recordsPresent: true };\r\n          },\r\n          () => {}\r\n        );\r\n      });\r\n  };\r\n\r\n  //Search based on Customer Name Column\r\n  search = (e) => {\r\n    this.setState(\r\n      () => {\r\n        return { searchOn: true };\r\n      },\r\n      () => {}\r\n    );\r\n    var records = this.state.records.filter((item) => {\r\n      return (\r\n        String(item.custName)\r\n          .toLowerCase()\r\n          .search(String(this.state.searchbox).toLowerCase()) !== -1\r\n      );\r\n    });\r\n    this.setState(\r\n      () => {\r\n        return { searchRecords: records };\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  //For storing text from search box\r\n  handleSearchBox = (e) => {\r\n    e.persist();\r\n    this.setState(\r\n      () => {\r\n        return { searchbox: e.target.value };\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  //Resetting the Records table and Search Box\r\n  handleReset = (e) => {\r\n    this.setState(() => {\r\n      return { searchOn: false, searchbox: \"\" };\r\n    });\r\n  };\r\n\r\n  //Moving to Edit page and having Record id as Route parameter\r\n  editRecord = (id) => {\r\n    this.props.history.push(\"/editrecord/\" + id);\r\n  };\r\n\r\n  //Deleting the Record on del button click\r\n  deleteRecord = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      var db = firestore();\r\n      //Delete From DB\r\n      db.collection(\"installations\")\r\n        .doc(String(id))\r\n        .delete()\r\n        .then(() => {\r\n          alert(\"Record Deleted Successfully\");\r\n          //Delete from records Array\r\n          var updatedRecords = this.state.records.filter(\r\n            (item) => item.id !== id\r\n          );\r\n          this.setState(\r\n            () => {\r\n              return { records: updatedRecords };\r\n            },\r\n            () => {}\r\n          );\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    const dispRecords =\r\n      this.state.searchOn === true\r\n        ? this.state.searchRecords\r\n        : this.state.records;\r\n    const recordMapper = dispRecords.map((item, index) => (\r\n      <tr key={item.id}>\r\n        <td>{item.custName}</td>\r\n        <td>{item.plantInstalled}</td>\r\n        <td>{item.dateOfInstallment}</td>\r\n        <td>{item.nextServiceDate}</td>\r\n        <td>{item.custAddress}</td>\r\n        <td>{item.custPhone}</td>\r\n        <td onClick={() => this.editRecord(item.id)}>\r\n          <FaEdit />\r\n        </td>\r\n        <td onClick={() => this.deleteRecord(item.id)}>\r\n          <FaTrash />\r\n        </td>\r\n      </tr>\r\n    ));\r\n    const feed =\r\n      this.state.recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      );\r\n    return (\r\n      <Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <h2 id=\"title\">Viewing All Records</h2>\r\n        <input\r\n          id=\"\"\r\n          value={this.state.searchbox}\r\n          placeholder=\"search\"\r\n          type=\"text\"\r\n          name=\"searchbox\"\r\n          onChange={this.handleSearchBox}\r\n        />\r\n        <button type=\"button\" onClick={this.search}>\r\n          Search\r\n        </button>\r\n        <button type=\"button\" onClick={this.handleReset}>\r\n          {\" \"}\r\n          Reset\r\n        </button>\r\n        <table id=\"records-table\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Plant Installed</td>\r\n              <td>Date of Installment</td>\r\n              <td>Next Service Date</td>\r\n              <td>Address</td>\r\n              <td>Phone</td>\r\n              <td>Edit</td>\r\n              <td>Delete</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{feed}</tbody>\r\n        </table>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(ViewRecords);","//Get Today's Date\r\nexport const getToday = () => {\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //January is 0!\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd; //If Date is between 1-9 - Prefix '0' to it\r\n  }\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm; //If Month is between 1-9 - Prefix '0' to it\r\n  }\r\n  today = yyyy + \"-\" + mm + \"-\" + dd;\r\n  return today;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport { firestore } from \"firebase\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\nimport \"./home.css\";\r\nimport firebase from 'firebase';\r\nclass Home extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioRef = React.createRef(); //For Notification Audio Tag\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n      this.getCurrentUser(); //To Verify Authentication\r\n  }\r\n\r\n  getCurrentUser = e => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user === null || user === undefined) \r\n      {\r\n        this.props.history.push('/login');\r\n      } \r\n    });\r\n  }\r\n  //For Getting the notification Count on Refresh button click\r\n  getNotificationCount = () => {\r\n    var today = getToday();\r\n    var db = firestore();\r\n    var recArr = [];\r\n    //Getting records with today as their Next service Date\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // Getting Pending Service Records and adding them to above Array\r\n    db.collection(\"installations\")\r\n      .where(\"status\", \"==\", \"pending\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          var a1 = recArr.find((item) => item.id === idObj.id);\r\n          if (a1 === null || a1 === undefined) {\r\n            recArr.push(obj);\r\n          }\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {\r\n            this.playNotificationSound(this.state.count);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //For Playing Notification Sound\r\n  playNotificationSound = (count) => {\r\n    if (count > 0) {\r\n      this.audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  logoutUser = e => {\r\n    firebase.auth().signOut().then(()=> {\r\n      this.props.history.push('/login'); //Move to Login Route on Logout\r\n    }).catch(function(error) {\r\n      console.log(error);\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"dashboardform\">\r\n        <h2>Welcome to Naveen's DB</h2>\r\n        <p>\r\n          <Link to=\"/addrecords\">\r\n            <button className=\"link\">Add Records</button>\r\n          </Link>{\" \"}\r\n        </p>\r\n        <p>\r\n          <Link to=\"/viewrecords\">\r\n            <button className=\"link\">View Records</button>\r\n          </Link>\r\n        </p>\r\n        <p>\r\n          <Link to=\"/notifications\">\r\n            <button className=\"link\">Notifications ({this.state.count})</button>\r\n          </Link>{\" \"}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <a href=\"##\" onClick={this.getNotificationCount}>\r\n            <button className=\"link\">Refresh</button>\r\n          </a>\r\n        </p>\r\n        <p>\r\n          <button className=\"link\" onClick={this.logoutUser}>Logout</button>\r\n        </p>\r\n        <audio\r\n          webkit-playsinline=\"true\"\r\n          playsInline={true}\r\n          ref={this.audioRef}\r\n          id=\"notificationSound\"\r\n          src=\"https://notificationsounds.com/soundfiles/b2f627fff19fda463cb386442eac2b3d/file-sounds-1142-inflicted.mp3\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Home);","import React, { Component } from \"react\";\r\n// import * as firebase from \"firebase\";\r\nimport { firestore } from \"firebase\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\nimport firebase from \"firebase\";\r\nclass Notification extends Component {\r\n  state = {\r\n    recordsPresent: false,\r\n    records: [],\r\n    snackBar: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser(); //to verify authentication\r\n    this.getData(); //Get notificationd data from db\r\n  }\r\n  \r\n  getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    var today = getToday();\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    db.collection(\"installations\")\r\n      .where(\"status\", \"==\", \"pending\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          var a1 = recArr.find((item) => item.id === idObj.id);\r\n          if (a1 === null || a1 === undefined) {\r\n            recArr.push(obj);\r\n          }\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Status update - pending and completed - store changes to db\r\n  updateStatus = (id, value) => {\r\n    var db = firestore();\r\n    if (window.confirm(\"Are you sure to Change?\")) {\r\n      db.collection(\"installations\")\r\n        .doc(String(id))\r\n        .set(\r\n          {\r\n            status: value,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(() => {\r\n          var records = this.state.records;\r\n          var updatedRecord = this.state.records.find(\r\n            (record) => record.id === id\r\n          );\r\n          records.pop(updatedRecord);\r\n          updatedRecord.status = value;\r\n          records.push(updatedRecord);\r\n          this.setState(() => {\r\n            return {\r\n              records: records,\r\n              recordsPresent: true,\r\n              count: records.length,\r\n            };\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error Adding Document: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const recordMapper = this.state.records.map((item, index) => (\r\n      <tr key={index}>\r\n        <td>{item.custName}</td>\r\n        <td>{item.plantInstalled}</td>\r\n        <td>{item.dateOfInstallment}</td>\r\n        <td>{item.nextServiceDate}</td>\r\n        <td>{item.custAddress}</td>\r\n        <td>{item.custPhone}</td>\r\n        <td>\r\n          <select\r\n            value={item.status}\r\n            onChange={(e) => this.updateStatus(item.id, e.target.value)}\r\n          >\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    const feed =\r\n      this.state.recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      );\r\n    const feed2 =\r\n      this.state.count === 0 ? (\r\n        <tr>\r\n          <td>No Notification</td>\r\n        </tr>\r\n      ) : (\r\n        feed\r\n      );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <p>Notifications ({this.state.count})</p>\r\n        <table id=\"records-table\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Plant Installed</td>\r\n              <td>Date of Installment</td>\r\n              <td>Next Service Date</td>\r\n              <td>Address</td>\r\n              <td>Phone</td>\r\n              <td>Status</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{feed2}</tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Notification);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"error-block\">\r\n          <p>\r\n            <span>Something went wrong. </span>\r\n            <Link to=\"/\">Go To Dashboard</Link>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PageNotFound(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"pagenotfound\">\r\n        <h1> 404 Error. Page Not Found </h1>\r\n        <Link className=\"link\" to={\"/dashboard\"}>\r\n          Click Here to go to Dashboard\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nclass EditRecord extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    model: \"\",\r\n    address: \"\",\r\n    dateofinstallment: \"\",\r\n    nextservicedate: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser();\r\n    this.getData();\r\n  }\r\n\r\n  getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n  //Saving values from input fields\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => {\r\n      return { [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n  // Checking all required fields are filled\r\n  validateInput = () => {\r\n    const {\r\n      name,\r\n      number,\r\n      model,\r\n      dateofinstallment,\r\n      nextservicedate,\r\n      address,\r\n    } = this.state;\r\n    if (\r\n      name !== null &&\r\n      number !== null &&\r\n      model !== null &&\r\n      dateofinstallment !== null &&\r\n      nextservicedate !== null &&\r\n      address !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //Add the edited record to the Database\r\n  addRecord = (e) => {\r\n    e.preventDefault();\r\n    if (this.validateInput()) {\r\n      if (window.confirm(\"Are you sure to edit?\")) {\r\n        var id = this.props.match.params.id;\r\n        var db = firestore();\r\n        db.collection(\"installations\")\r\n          .doc(String(id))\r\n          .set({\r\n            custName: this.state.name,\r\n            custPhone: this.state.number,\r\n            plantInstalled: this.state.model,\r\n            dateOfInstallment: this.state.dateofinstallment,\r\n            nextServiceDate: this.state.nextservicedate,\r\n            custAddress: this.state.address,\r\n          })\r\n          .then(() => {\r\n            alert(\"Record Edited Successfully..!\");\r\n            this.props.history.push(\"/dashboard\");\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error Adding Document: \", error);\r\n          });\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //Get record data based on Id from Firestore\r\n  getData = () => {\r\n    var id = this.props.match.params.id;\r\n    var db = firestore();\r\n    db.collection(\"installations\")\r\n      .doc(String(id))\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          var rec = doc.data();\r\n          this.setState(\r\n            () => {\r\n              return {\r\n                name: rec.custName,\r\n                number: rec.custPhone,\r\n                model: rec.plantInstalled,\r\n                address: rec.custAddress,\r\n                dateofinstallment: rec.dateOfInstallment,\r\n                nextservicedate: rec.nextServiceDate,\r\n              };\r\n            },\r\n            () => {}\r\n          );\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <div className=\"form\">\r\n          <form>\r\n            <h2>Edit Record</h2>\r\n            <p htmlFor=\"name\">Customer Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              placeholder=\"Customer Name\"\r\n              onChange={this.handleInputChange}\r\n              name=\"name\"\r\n              required\r\n            />\r\n            <p htmlFor=\"number\">Customer Contact Number:</p>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.number}\r\n              placeholder=\"Customer Phone Number\"\r\n              onChange={this.handleInputChange}\r\n              name=\"number\"\r\n              required\r\n            />\r\n            <p htmlFor=\"model\">Plant Installed:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.model}\r\n              placeholder=\"Plant Model\"\r\n              onChange={this.handleInputChange}\r\n              name=\"model\"\r\n              required\r\n            />\r\n            <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.dateofinstallment}\r\n              placeholder=\"Date of Installment\"\r\n              onChange={this.handleInputChange}\r\n              name=\"dateofinstallment\"\r\n              required\r\n            />\r\n            <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.nextservicedate}\r\n              placeholder=\"Next Service Date\"\r\n              onChange={this.handleInputChange}\r\n              name=\"nextservicedate\"\r\n              required\r\n            />\r\n            <p htmlFor=\"address\">Customer Address:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.address}\r\n              placeholder=\"Address\"\r\n              onChange={this.handleInputChange}\r\n              name=\"address\"\r\n              required\r\n            />\r\n            <div></div>\r\n            <button type=\"submit\" onClick={this.addRecord}>\r\n              {\" \"}\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(EditRecord);","import React, { Component } from 'react';\r\nimport { Link, withRouter} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nimport './login.css';\r\nclass Login extends Component {\r\n    state = {\r\n        authMessage: '',\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        e.persist();\r\n        this.setState(\r\n            ()=> { return { [e.target.name]: e.target.value}},\r\n            ()=> {}\r\n        );\r\n    }\r\n\r\n    login = (e) => {\r\n        e.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then( (res)=> {\r\n            //Move Route\r\n            localStorage.setItem('loggedIn', true);\r\n            this.props.history.push('/dashboard');\r\n        })\r\n        .catch( (err)=> {\r\n            if(err.code === 'auth/wrong-password')\r\n            {\r\n                this.setState(\r\n                    ()=> { return { authMessage: \"The email or Password is incorrect !\" }}\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // For getting Password Reset Email - and Move to Password Reset Info Page\r\n    resetPassword =  (e) => {\r\n        console.log(this.state.email);\r\n        firebase.auth().sendPasswordResetEmail(this.state.email)\r\n        .then( (res)=> {\r\n             this.props.history.push('/resetpwd');\r\n        })\r\n        .catch( err=> { console.log(err);})\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div>\r\n                    <h2 className=\"title\">Naveen's Db</h2>\r\n                </div>\r\n                <h3 className=\"title\">Login</h3>\r\n        <div className=\"form\">\r\n            <form>\r\n                <small className=\"err\">{this.state.authMessage}</small>\r\n                <p htmlFor=\"email\">Email</p>\r\n                <input placeholder=\"Your Email Id here\" type=\"email\" name=\"email\" onChange={this.handleInputChange} required/>\r\n                <p htmlFor=\"password\">Password</p>\r\n                <input placeholder=\"Your Password here\" type=\"password\" name=\"password\" onChange={this.handleInputChange} required/>\r\n                <button type=\"submit\" name=\"submit\" onClick={this.login}>Login Now</button>\r\n                <div>\r\n                    <small className=\"err\">Forgot Password? <span onClick={this.resetPassword}><u>Click Here to Reset</u></span></small>\r\n                </div>\r\n            </form>\r\n            <p>Don't have an account? <Link to=\"/signup\"><u>Sign Up here</u></Link></p>\r\n        </div>\r\n\r\n        \r\n        </React.Fragment> );\r\n    }\r\n}\r\nexport default withRouter(Login);","import React, { Component } from \"react\";\r\n// import * as firebase from 'firebase/auth';\r\nimport firebase from \"firebase\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport \"./signin.css\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    authMessage: \"\",\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(\r\n      () => {\r\n        return { [e.target.name]: e.target.value };\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  signIn = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((res) => {\r\n        alert(\"Account Created Successfully ! Please Login Now\");\r\n        this.props.history.push(\"/login\");\r\n      })\r\n      .catch((err) => {\r\n        this.setState(() => {\r\n          return { authMessage: err.message };\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <h2 className=\"title\">Naveen's Db</h2>\r\n        </div>\r\n        <h3 className=\"title\">Sign Up</h3>\r\n        <div className=\"form\">\r\n          <form>\r\n            <small id=\"err\">{this.state.authMessage}</small>\r\n            <p htmlFor=\"email\">Email</p>\r\n            <input\r\n              placeholder=\"eg., xxx@example.com\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n            <p htmlFor=\"password\">Password</p>\r\n            <input\r\n              placeholder=\"Must be atleast 8 characters\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n            <button type=\"submit\" name=\"submit\" onClick={this.signIn}>\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <Link to=\"/login\">\r\n              <u>Login here</u>\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(SignUp);","import React from 'react';\r\nimport './pwdreset.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst PasswordReset = (props) => {\r\n    return ( \r\n        <div id=\"pwdreset\">\r\n            <h2>Password Reset</h2>\r\n            <p>Hi User, Please check your Mail Inbox for Password Reset Link</p>\r\n            <small>Note: It might take a minute or two to send password reset mail. Please be patient for the time being.</small>\r\n            <small> Once you reset the Password, <Link to=\"/login\"><u>Click here</u></Link></small>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default PasswordReset;","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport AddRecord from \"../AddRecord/addRecord\";\r\nimport ViewRecords from \"../ViewRecords/viewRecords\";\r\nimport Home from \"../Home/home\";\r\nimport Notifications from \"../Notifications/notifications\";\r\nimport ErrorBoundary from \"../ErrorBoundary/errorboundary\";\r\nimport PageNotFound from \"../PageNotFound/pagenotfound\";\r\nimport EditRecord from \"../EditRecord/editRecord\";\r\nimport Login from \"../Login/login\";\r\nimport SignUp from \"../SignIn/signin\";\r\nimport PasswordReset from '../PasswordReset/passwordreset';\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/naveen-db/\"\r\n          render={() => <Redirect to=\"/login\" />}\r\n        />\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n        <Route exact path=\"/login\" render={ ()=> <Login />} />\r\n        <Route exact path=\"/signup\" render={ ()=> <SignUp />} />\r\n        <Route exact path=\"/dashboard\" render={() => <Home />} />\r\n        <Route exact path=\"/addrecords\" render={() => <AddRecord />} />\r\n        <Route exact path=\"/notifications\" render={() => <Notifications />} />\r\n        <Route exact path=\"/viewrecords\" render={() => <ViewRecords />} />\r\n        <Route exact path=\"/editrecord/:id\" render={() => <EditRecord />} />\r\n        <Route exact path=\"/resetpwd\" render={() => <PasswordReset />} />\r\n        <Route\r\n          render={() => (\r\n            <Fragment>\r\n              <ErrorBoundary>\r\n                <PageNotFound />\r\n              </ErrorBoundary>\r\n            </Fragment>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport Routes from \"../Routes/routes\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/App/app\";\n// import * as firebase from \"firebase\";\nimport firebase from 'firebase/app';\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCmGN1TXfG9dTYXx80HvckdQkJpE9nTLXY\",\n  authDomain: \"naveen-s-db.firebaseapp.com\",\n  databaseURL: \"https://naveen-s-db.firebaseio.com\",\n  projectId: \"naveen-s-db\",\n  storageBucket: \"naveen-s-db.appspot.com\",\n  messagingSenderId: \"941064666107\",\n  appId: \"1:941064666107:web:17532e787616deadbf695e\",\n  measurementId: \"G-34S1Z2T39Q\",\n};\nfirebase.initializeApp(firebaseConfig);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}