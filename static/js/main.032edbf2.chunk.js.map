{"version":3,"sources":["AddRecord/addRecord.js","ViewRecords/viewRecords.js","Utils/utilityFunctions.js","Home/home.js","Notifications/notifications.js","ErrorBoundary/errorboundary.js","PageNotFound/pagenotfound.js","EditRecord/editRecord.js","Routes/routes.js","App/app.js","index.js"],"names":["AddRecord","state","redirect","dashboardStmt","name","number","model","dateofinstallment","nextservicedate","address","handleInputChange","e","persist","setState","target","value","validateInput","addRecord","preventDefault","window","confirm","firestore","collection","add","custName","custPhone","plantInstalled","dateOfInstallment","nextServiceDate","custAddress","then","alert","catch","error","console","this","to","className","id","htmlFor","type","placeholder","onChange","required","onClick","Component","withRouter","ViewRecords","records","recordsPresent","searchbox","searchOn","getData","db","recArr","get","querySnapshot","forEach","doc","idObj","obj","data","push","search","filter","item","String","toLowerCase","searchRecords","handleSearchBox","handleReset","editRecord","props","history","deleteRecord","delete","updatedRecords","recordMapper","map","index","key","feed","getToday","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Home","count","getNotificationCount","where","length","err","log","a1","find","undefined","playNotificationSound","audioRef","current","play","React","createRef","href","webkit-playsinline","playsInline","ref","src","Notification","updateStatus","set","status","merge","updatedRecord","record","pop","feed2","Fragment","ErrorBoundary","hasError","errorInfo","children","PageNotFound","EditRecord","match","params","exists","rec","Routes","exact","path","render","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.032edbf2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import firebase from 'firebase/app';\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport \"./addrecords.css\";\r\nclass AddRecord extends Component {\r\n  state = {\r\n    redirect: false,\r\n    dashboardStmt: \"< Go To Dashboard\",\r\n    name: null,\r\n    number: null,\r\n    model: null,\r\n    dateofinstallment: null,\r\n    nextservicedate: null,\r\n    address: null,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => {\r\n      return { [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  validateInput = () => {\r\n    const {\r\n      name,\r\n      number,\r\n      model,\r\n      dateofinstallment,\r\n      nextservicedate,\r\n      address,\r\n    } = this.state;\r\n    if (\r\n      name !== null &&\r\n      number !== null &&\r\n      model !== null &&\r\n      dateofinstallment !== null &&\r\n      nextservicedate !== null &&\r\n      address !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  addRecord = (e) => {\r\n    e.preventDefault();\r\n    if (this.validateInput()) {\r\n      if (window.confirm(\"Are you sure you want to add this Record?\")) {\r\n        var db = firestore();\r\n        db.collection(\"installations\")\r\n          .add({\r\n            custName: this.state.name,\r\n            custPhone: this.state.number,\r\n            plantInstalled: this.state.model,\r\n            dateOfInstallment: this.state.dateofinstallment,\r\n            nextServiceDate: this.state.nextservicedate,\r\n            custAddress: this.state.address,\r\n          })\r\n          .then(() => {\r\n            alert(\"Record Added Successfully..!\");\r\n            this.setState(\r\n              () => {\r\n                return { redirect: true };\r\n              },\r\n              () => {}\r\n            );\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error Adding Document: \", error);\r\n          });\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  render() {\r\n    if (this.state.redirect === true) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n      <div className=\"form\">\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{this.state.dashboardStmt}</button>\r\n          </Link>\r\n        </p>\r\n        <form>\r\n          <h2>Add New Record</h2>\r\n          <p htmlFor=\"name\">Customer Name:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Customer Name\"\r\n            onChange={this.handleInputChange}\r\n            name=\"name\"\r\n            required\r\n          />\r\n          <p htmlFor=\"number\">Customer Contact Number:</p>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Customer Phone Number\"\r\n            onChange={this.handleInputChange}\r\n            name=\"number\"\r\n            required\r\n          />\r\n          <p htmlFor=\"model\">Plant Installed:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Plant Model\"\r\n            onChange={this.handleInputChange}\r\n            name=\"model\"\r\n            required\r\n          />\r\n          <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Date of Installment\"\r\n            onChange={this.handleInputChange}\r\n            name=\"dateofinstallment\"\r\n            required\r\n          />\r\n          <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Next Service Date\"\r\n            onChange={this.handleInputChange}\r\n            name=\"nextservicedate\"\r\n            required\r\n          />\r\n          <p htmlFor=\"address\">Customer Address:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Address\"\r\n            onChange={this.handleInputChange}\r\n            name=\"address\"\r\n            required\r\n          />\r\n          <div></div>\r\n          <button type=\"submit\" onClick={this.addRecord}>\r\n            {\" \"}\r\n            Add New Record\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AddRecord);\r\n","import React, { Component, Fragment } from \"react\";\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport \"./viewRecords.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nclass ViewRecords extends Component {\r\n  state = {\r\n    records: [],\r\n    recordsPresent: false,\r\n    searchbox: \"\",\r\n    searchOn: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return { records: recArr, recordsPresent: true };\r\n          },\r\n          () => {}\r\n        );\r\n      });\r\n  };\r\n\r\n  search = (e) => {\r\n    this.setState(\r\n      () => {\r\n        return { searchOn: true };\r\n      },\r\n      () => {}\r\n    );\r\n    var records = this.state.records.filter((item) => {\r\n      return (\r\n        String(item.custName)\r\n          .toLowerCase()\r\n          .search(String(this.state.searchbox).toLowerCase()) !== -1\r\n      );\r\n    });\r\n    this.setState(\r\n      () => {\r\n        return { searchRecords: records };\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  handleSearchBox = (e) => {\r\n    e.persist();\r\n    this.setState(\r\n      () => {\r\n        return { searchbox: e.target.value };\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  handleReset = (e) => {\r\n    this.setState(() => {\r\n      return { searchOn: false, searchbox: \"\" };\r\n    });\r\n  };\r\n  editRecord = (id) => {\r\n    this.props.history.push(\"/editrecord/\" + id);\r\n  };\r\n\r\n  deleteRecord = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      var db = firestore();\r\n      //Delete From DB\r\n      db.collection(\"installations\")\r\n        .doc(String(id))\r\n        .delete()\r\n        .then(() => {\r\n          alert(\"Record Deleted Successfully\");\r\n          //Delete from records Array\r\n          var updatedRecords = this.state.records.filter(\r\n            (item) => item.id !== id\r\n          );\r\n          this.setState(\r\n            () => {\r\n              return { records: updatedRecords };\r\n            },\r\n            () => {}\r\n          );\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n      \r\n    }\r\n  };\r\n  render() {\r\n    const dispRecords =\r\n      this.state.searchOn === true\r\n        ? this.state.searchRecords\r\n        : this.state.records;\r\n    const recordMapper = dispRecords.map((item, index) => (\r\n      <tr key={item.id}>\r\n        <td>{item.custName}</td>\r\n        <td>{item.plantInstalled}</td>\r\n        <td>{item.dateOfInstallment}</td>\r\n        <td>{item.nextServiceDate}</td>\r\n        <td>{item.custAddress}</td>\r\n        <td>{item.custPhone}</td>\r\n        <td onClick={() => this.editRecord(item.id)}>\r\n          <FaEdit />\r\n        </td>\r\n        <td onClick={() => this.deleteRecord(item.id)}>\r\n          <FaTrash />\r\n        </td>\r\n      </tr>\r\n    ));\r\n    const feed =\r\n      this.state.recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      );\r\n    return (\r\n      <Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <h2 id=\"title\">Viewing All Records</h2>\r\n        <input\r\n          id=\"\"\r\n          value={this.state.searchbox}\r\n          placeholder=\"search\"\r\n          type=\"text\"\r\n          name=\"searchbox\"\r\n          onChange={this.handleSearchBox}\r\n        />\r\n        <button type=\"button\" onClick={this.search}>\r\n          Search\r\n        </button>\r\n        <button type=\"button\" onClick={this.handleReset}>\r\n          {\" \"}\r\n          Reset\r\n        </button>\r\n\r\n        <table id=\"records-table\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Plant Installed</td>\r\n              <td>Date of Installment</td>\r\n              <td>Next Service Date</td>\r\n              <td>Address</td>\r\n              <td>Phone</td>\r\n              <td>Edit</td>\r\n              <td>Delete</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{feed}</tbody>\r\n        </table>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ViewRecords);\r\n","//Get Today's Date\r\nexport const getToday = () => {\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //January is 0!\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd; //If Date is between 1-9 - Prefix '0' to it\r\n  }\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm; //If Month is between 1-9 - Prefix '0' to it\r\n  }\r\n  today = yyyy + \"-\" + mm + \"-\" + dd;\r\n  return today;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firestore } from \"firebase\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\nimport \"./home.css\";\r\nclass Home extends Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.audioRef = React.createRef();\r\n  }\r\n  // componentDidMount()\r\n  // {\r\n  //     this.getNotificationCount();\r\n  // }\r\n\r\n  getNotificationCount = () => {\r\n    var today = getToday();\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    db.collection(\"installations\")\r\n      .where(\"status\", \"==\", \"pending\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          var a1 = recArr.find((item) => item.id === idObj.id);\r\n          if (a1 === null || a1 === undefined) {\r\n            recArr.push(obj);\r\n          }\r\n        });\r\n        // var rec = recArr.concat(this.state.records);\r\n\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {\r\n            this.playNotificationSound(this.state.count);\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  playNotificationSound = (count) => {\r\n    if (count > 0) {\r\n      this.audioRef.current.play();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"dashboardform\">\r\n        <h2>Welcome to Naveen's DB</h2>\r\n        <p>\r\n          <Link to=\"/addrecords\">\r\n            <button className=\"link\">Add Records</button>\r\n          </Link>{\" \"}\r\n        </p>\r\n        <p>\r\n          <Link to=\"/viewrecords\">\r\n            <button className=\"link\">View Records</button>\r\n          </Link>\r\n        </p>\r\n        <p>\r\n          <Link to=\"/notifications\">\r\n            <button className=\"link\">Notifications ({this.state.count})</button>\r\n          </Link>{\" \"}\r\n        </p>\r\n        <p>\r\n          {\" \"}\r\n          <a href=\"##\" onClick={this.getNotificationCount}>\r\n            <button className=\"link\">Refresh</button>\r\n          </a>\r\n        </p>\r\n        <audio\r\n          webkit-playsinline=\"true\"\r\n          playsInline={true}\r\n          ref={this.audioRef}\r\n          id=\"notificationSound\"\r\n          src=\"https://notificationsounds.com/soundfiles/b2f627fff19fda463cb386442eac2b3d/file-sounds-1142-inflicted.mp3\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n// import * as firebase from \"firebase\";\r\nimport { firestore } from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\nclass Notification extends Component {\r\n  state = {\r\n    recordsPresent: false,\r\n    records: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    var today = getToday();\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    db.collection(\"installations\")\r\n      .where(\"status\", \"==\", \"pending\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          var a1 = recArr.find((item) => item.id === idObj.id);\r\n          if (a1 === null || a1 === undefined) {\r\n            recArr.push(obj);\r\n          }\r\n        });\r\n\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  updateStatus = (id, value) => {\r\n    var db = firestore();\r\n    if (window.confirm(\"Are you sure to Change?\")) {\r\n      db.collection(\"installations\")\r\n        .doc(String(id))\r\n        .set(\r\n          {\r\n            status: value,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(() => {\r\n          var records = this.state.records;\r\n          var updatedRecord = this.state.records.find(\r\n            (record) => record.id === id\r\n          );\r\n          records.pop(updatedRecord);\r\n          updatedRecord.status = value;\r\n          records.push(updatedRecord);\r\n          this.setState(() => {\r\n            return {\r\n              records: records,\r\n              recordsPresent: true,\r\n              count: records.length,\r\n            };\r\n          });\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error Adding Document: \", error);\r\n        });\r\n    }\r\n  };\r\n  render() {\r\n    const recordMapper = this.state.records.map((item, index) => (\r\n      <tr key={index}>\r\n        <td>{item.custName}</td>\r\n        <td>{item.plantInstalled}</td>\r\n        <td>{item.dateOfInstallment}</td>\r\n        <td>{item.nextServiceDate}</td>\r\n        <td>{item.custAddress}</td>\r\n        <td>{item.custPhone}</td>\r\n        <td>\r\n          <select\r\n            value={item.status}\r\n            onChange={(e) => this.updateStatus(item.id, e.target.value)}\r\n          >\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n    ));\r\n    const feed =\r\n      this.state.recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      );\r\n    const feed2 =\r\n      this.state.count === 0 ? (\r\n        <tr>\r\n          <td>No Notification</td>\r\n        </tr>\r\n      ) : (\r\n        feed\r\n      );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <p>Notifications ({this.state.count})</p>\r\n        <table id=\"records-table\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Plant Installed</td>\r\n              <td>Date of Installment</td>\r\n              <td>Next Service Date</td>\r\n              <td>Address</td>\r\n              <td>Phone</td>\r\n              <td>Status</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{feed2}</tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"error-block\">\r\n          <p>\r\n            <span>Something went wrong. </span>\r\n            <Link to=\"/\">Go To Dashboard</Link>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PageNotFound(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"pagenotfound\">\r\n        <h1> 404 Error. Page Not Found </h1>\r\n        <Link className=\"link\" to={\"/dashboard\"}>\r\n          Click Here to go to Dashboard\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\n\r\nclass EditRecord extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    model: \"\",\r\n    address: \"\",\r\n    dateofinstallment: \"\",\r\n    nextservicedate: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => {\r\n      return { [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  validateInput = () => {\r\n    const {\r\n      name,\r\n      number,\r\n      model,\r\n      dateofinstallment,\r\n      nextservicedate,\r\n      address,\r\n    } = this.state;\r\n    if (\r\n      name !== null &&\r\n      number !== null &&\r\n      model !== null &&\r\n      dateofinstallment !== null &&\r\n      nextservicedate !== null &&\r\n      address !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  addRecord = (e) => {\r\n    e.preventDefault();\r\n    if (this.validateInput()) {\r\n      if (window.confirm(\"Are you sure to edit?\")) {\r\n        var id = this.props.match.params.id;\r\n        var db = firestore();\r\n        db.collection(\"installations\")\r\n          .doc(String(id))\r\n          .set({\r\n            custName: this.state.name,\r\n            custPhone: this.state.number,\r\n            plantInstalled: this.state.model,\r\n            dateOfInstallment: this.state.dateofinstallment,\r\n            nextServiceDate: this.state.nextservicedate,\r\n            custAddress: this.state.address,\r\n          })\r\n          .then(() => {\r\n            alert(\"Record Edited Successfully..!\");\r\n            this.props.history.push(\"/dashboard\");\r\n            // this.setState(\r\n            //     ()=> { return { redirect: true}},\r\n            //     ()=> { }\r\n            // );\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error Adding Document: \", error);\r\n          });\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  getData = () => {\r\n    var id = this.props.match.params.id;\r\n    var db = firestore();\r\n    db.collection(\"installations\")\r\n      .doc(String(id))\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          var rec = doc.data();\r\n          this.setState(\r\n            () => {\r\n              return {\r\n                name: rec.custName,\r\n                number: rec.custPhone,\r\n                model: rec.plantInstalled,\r\n                address: rec.custAddress,\r\n                dateofinstallment: rec.dateOfInstallment,\r\n                nextservicedate: rec.nextServiceDate,\r\n              };\r\n            },\r\n            () => {}\r\n          );\r\n        } else {\r\n          // doc.data() will be undefined in this case\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <div className=\"form\">\r\n          <form>\r\n            <h2>Edit Record</h2>\r\n            <p htmlFor=\"name\">Customer Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              placeholder=\"Customer Name\"\r\n              onChange={this.handleInputChange}\r\n              name=\"name\"\r\n              required\r\n            />\r\n            <p htmlFor=\"number\">Customer Contact Number:</p>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.number}\r\n              placeholder=\"Customer Phone Number\"\r\n              onChange={this.handleInputChange}\r\n              name=\"number\"\r\n              required\r\n            />\r\n            <p htmlFor=\"model\">Plant Installed:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.model}\r\n              placeholder=\"Plant Model\"\r\n              onChange={this.handleInputChange}\r\n              name=\"model\"\r\n              required\r\n            />\r\n            <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.dateofinstallment}\r\n              placeholder=\"Date of Installment\"\r\n              onChange={this.handleInputChange}\r\n              name=\"dateofinstallment\"\r\n              required\r\n            />\r\n            <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.nextservicedate}\r\n              placeholder=\"Next Service Date\"\r\n              onChange={this.handleInputChange}\r\n              name=\"nextservicedate\"\r\n              required\r\n            />\r\n            <p htmlFor=\"address\">Customer Address:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.address}\r\n              placeholder=\"Address\"\r\n              onChange={this.handleInputChange}\r\n              name=\"address\"\r\n              required\r\n            />\r\n            <div></div>\r\n            <button type=\"submit\" onClick={this.addRecord}>\r\n              {\" \"}\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(EditRecord);\r\n","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport AddRecord from \"../AddRecord/addRecord\";\r\nimport ViewRecords from \"../ViewRecords/viewRecords\";\r\nimport Home from \"../Home/home\";\r\nimport Notifications from \"../Notifications/notifications\";\r\nimport ErrorBoundary from \"../ErrorBoundary/errorboundary\";\r\nimport PageNotFound from \"../PageNotFound/pagenotfound\";\r\nimport EditRecord from \"../EditRecord/editRecord\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/naveen-db/\"\r\n          render={() => <Redirect to=\"/dashboard\" />}\r\n        />\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/dashboard\" />} />\r\n        <Route exact path=\"/dashboard\" render={() => <Home />} />\r\n        <Route exact path=\"/addrecords\" render={() => <AddRecord />} />\r\n        <Route exact path=\"/notifications\" render={() => <Notifications />} />\r\n        <Route exact path=\"/viewrecords\" render={() => <ViewRecords />} />\r\n        <Route exact path=\"/editrecord/:id\" render={() => <EditRecord />} />\r\n        <Route\r\n          render={() => (\r\n            <Fragment>\r\n              <ErrorBoundary>\r\n                <PageNotFound />\r\n              </ErrorBoundary>\r\n            </Fragment>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport Routes from \"../Routes/routes\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/App/app\";\n// import * as firebase from \"firebase\";\nimport firebase from 'firebase/app';\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCmGN1TXfG9dTYXx80HvckdQkJpE9nTLXY\",\n  authDomain: \"naveen-s-db.firebaseapp.com\",\n  databaseURL: \"https://naveen-s-db.firebaseio.com\",\n  projectId: \"naveen-s-db\",\n  storageBucket: \"naveen-s-db.appspot.com\",\n  messagingSenderId: \"941064666107\",\n  appId: \"1:941064666107:web:17532e787616deadbf695e\",\n  measurementId: \"G-34S1Z2T39Q\",\n};\nfirebase.initializeApp(firebaseConfig);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}