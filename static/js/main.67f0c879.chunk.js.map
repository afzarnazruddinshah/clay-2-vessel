{"version":3,"sources":["AddRecord/addRecord.js","ViewRecords/viewRecords.js","Utils/utilityFunctions.js","Home/home.js","Notifications/notifications.js","ErrorBoundary/errorboundary.js","PageNotFound/pagenotfound.js","EditRecord/editRecord.js","Routes/routes.js","App/app.js","serviceWorker.js","index.js"],"names":["AddRecord","props","state","redirect","dashboardStmt","name","number","model","dateofinstallment","nextservicedate","address","handleInputChange","e","persist","setState","target","value","validateInput","addRecord","window","confirm","firebase","collection","add","custName","custPhone","plantInstalled","dateOfInstallment","nextServiceDate","custAddress","then","alert","catch","error","console","this","to","className","htmlFor","type","placeholder","onChange","required","onClick","id","Component","withRouter","ViewRecords","records","recordsPresent","searchbox","searchOn","getData","db","recArr","get","querySnapshot","forEach","doc","idObj","obj","data","push","search","filter","item","String","toLowerCase","searchRecords","handleSearchBox","handleReset","editRecord","history","deleteRecord","delete","updatedRecords","recordMapper","map","index","key","feed","getToday","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Home","count","getNotificationCount","where","length","playNotificationSound","audioRef","current","play","React","createRef","href","webkit-playsinline","playsInline","ref","src","Notification","feed2","Fragment","ErrorBoundary","hasError","errorInfo","log","children","PageNotFound","EditRecord","match","params","set","exists","rec","Routes","exact","path","render","App","Boolean","location","hostname","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.67f0c879.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import firebase from 'firebase/app';\r\nimport * as firebase from 'firebase';\r\nimport { Link , Redirect, withRouter} from 'react-router-dom';\r\nimport './addrecords.css';\r\nclass AddRecord extends Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n        dashboardStmt: \"< Go To Dashboard\",\r\n        name: null,\r\n        number: null,\r\n        model: null,\r\n        dateofinstallment: null,\r\n        nextservicedate: null,\r\n        address: null\r\n    }\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        e.persist();\r\n        this.setState(\r\n            ()=> { return { [e.target.name] : e.target.value }}\r\n        );\r\n    }\r\n\r\n    validateInput = () => {\r\n        const { name, number, model, dateofinstallment, nextservicedate, address} = this.state;\r\n        if(name !== null && number !== null && model !== null && dateofinstallment !== null && nextservicedate !== null && address !== null)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    addRecord = e => {\r\n        if(this.validateInput())\r\n        {\r\n            if(window.confirm(\"Are you sure you want to add this Record?\"))\r\n        {\r\n            var db = firebase.firestore();\r\n            db.collection(\"installations\").add({\r\n                custName: this.state.name,\r\n                custPhone: this.state.number,\r\n                plantInstalled: this.state.model,\r\n                dateOfInstallment: this.state.dateofinstallment,\r\n                nextServiceDate: this.state.nextservicedate,\r\n                custAddress: this.state.address\r\n            })\r\n            .then(()=> {\r\n                alert(\"Record Added Successfully..!\");\r\n                this.setState(\r\n                    ()=> { return { redirect: true}},\r\n                    ()=> { }\r\n                );\r\n            })\r\n            .catch(function(error) {\r\n                console.error(\"Error Adding Document: \", error);\r\n            });\r\n        } \r\n        }\r\n        return false;\r\n         \r\n    }\r\n    render() { \r\n        \r\n        if(this.state.redirect === true)\r\n        {\r\n            return <Redirect to='/dashboard'/>\r\n        }\r\n        return ( \r\n            <div className=\"form\">\r\n                <form>\r\n                    <h2>Add New Record</h2>\r\n                    <p htmlFor=\"name\">Customer Name:</p>\r\n                    <input type=\"text\" placeholder=\"Customer Name\" onChange={this.handleInputChange} name=\"name\" required/>\r\n                    <p htmlFor=\"number\">Customer Contact Number:</p>\r\n                    <input type=\"number\" placeholder=\"Customer Phone Number\"  onChange={this.handleInputChange} name=\"number\" required/>\r\n                    <p htmlFor=\"model\">Plant Installed:</p>\r\n                    <input type=\"text\"  placeholder=\"Plant Model\" onChange={this.handleInputChange} name=\"model\" required/>\r\n                    <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n                    <input type=\"date\" placeholder=\"Date of Installment\" onChange={this.handleInputChange} name=\"dateofinstallment\" required/>\r\n                    <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n                    <input type=\"date\" placeholder=\"Next Service Date\" onChange={this.handleInputChange} name=\"nextservicedate\" required/>\r\n                    <p htmlFor=\"address\">Customer Address:</p>\r\n                    <input type=\"text\" placeholder=\"Address\" onChange={this.handleInputChange} name=\"address\" required/>\r\n                    <div></div>\r\n                    <button type=\"submit\" onClick={this.addRecord}> Add New Record</button>\r\n                </form>\r\n                <p>\r\n                <Link  to=\"/dashboard\"><button id=\"home\">{this.state.dashboardStmt}</button></Link>\r\n                </p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(AddRecord);","import React, { Component, Fragment } from 'react';\r\nimport * as firebase from 'firebase';\r\nimport './viewRecords.css';\r\nimport { Link , withRouter} from 'react-router-dom';\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\r\nclass ViewRecords extends Component {\r\n\r\n    state ={\r\n        records: [],\r\n        recordsPresent: false,\r\n        searchbox: \"\",\r\n        searchOn: false\r\n    }\r\n    \r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    getData = ()=> {\r\n        var db = firebase.firestore();\r\n        var recArr =[];\r\n        db.collection(\"installations\").get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                const idObj = { id: doc.id};\r\n                const obj = { ...idObj, ...doc.data()};\r\n                // console.log(obj);\r\n                recArr.push(obj);\r\n            });\r\n            this.setState(\r\n                ()=> { return { records: recArr, recordsPresent: true}},\r\n                ()=> { }\r\n            )\r\n        });\r\n    }\r\n\r\n    search = e => {\r\n        this.setState(\r\n            ()=> { return { searchOn: true}},\r\n            ()=> {}\r\n        );\r\n        // console.log(e.target.value);\r\n        // e.persist();\r\n        // var records = this.state.records.filter((item) => { String(item).toLowerCase().search(\r\n        //       e.target.value.toLowerCase()) !== -1;\r\n        //   });\r\n        var records = this.state.records.filter( item => { return String(item.custName).toLowerCase().search(String(this.state.searchbox).toLowerCase()) !== -1})\r\n        this.setState(\r\n            ()=> { return { searchRecords: records}},\r\n            ()=> { }\r\n        );\r\n    }\r\n\r\n    handleSearchBox = e => {\r\n        e.persist();\r\n        this.setState(\r\n            ()=> { return { searchbox: e.target.value}},\r\n            ()=> {}\r\n        );\r\n    }\r\n\r\n    handleReset = e => {\r\n        this.setState(\r\n            ()=> { return { searchOn: false, searchbox: \"\"}}\r\n        )\r\n    }\r\n    editRecord = (id) => {\r\n         this.props.history.push('/editrecord/'+id);\r\n    }\r\n\r\n    deleteRecord = (id) => {\r\n        if(window.confirm(\"Are you sure you want to delete?\"))\r\n        {\r\n            var db = firebase.firestore();\r\n            //Delete From DB\r\n            db.collection(\"installations\").doc(String(id)).delete().then(()=> {\r\n                alert(\"Record Deleted Successfully\");\r\n               var updatedRecords = this.state.records.filter( item => item.id !== id);\r\n               this.setState(\r\n                   ()=> { return { records: updatedRecords}},\r\n                   ()=> {}\r\n               );\r\n               \r\n            }).catch(function(error) {\r\n                console.error(\"Error removing document: \", error);\r\n            });\r\n            \r\n            //Delete from records Array\r\n           \r\n\r\n        }\r\n    }\r\n    render() { \r\n\r\n        const dispRecords = this.state.searchOn === true ? this.state.searchRecords: this.state.records;\r\n        const recordMapper = dispRecords.map(\r\n            (item, index)=> \r\n            <tr key={item.id}>\r\n                <td>{item.custName}</td>\r\n                <td>{item.plantInstalled}</td>\r\n                <td>{item.dateOfInstallment}</td>\r\n                <td>{item.nextServiceDate}</td>\r\n                <td>{item.custAddress}</td>\r\n                <td>{item.custPhone}</td>\r\n                <td onClick={()=> this.editRecord(item.id)}><FaEdit /></td>\r\n                <td onClick={()=> this.deleteRecord(item.id)}><FaTrash /></td>\r\n            </tr> \r\n        );\r\n        const feed = this.state.recordsPresent === true ? recordMapper : <tr><td>Loading</td></tr>\r\n        return ( \r\n            <Fragment>\r\n                <p>\r\n                <Link to=\"/dashboard\"><button id=\"home\">{\"< Go To Dashboard\"}</button></Link>\r\n                </p>\r\n                <h2 id=\"title\">Viewing All Records</h2>\r\n                <input id=\"\" value={this.state.searchbox} placeholder=\"search\" type=\"text\" name=\"searchbox\" onChange={this.handleSearchBox} />\r\n                <button type=\"button\" onClick={this.search}>Search</button>\r\n                <button type=\"button\" onClick={this.handleReset}> Reset</button>\r\n                  \r\n\r\n                <table id=\"records-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td>Plant Installed</td>\r\n                            <td>Date of Installment</td>\r\n                            <td>Next Service Date</td>\r\n                            <td>Address</td>\r\n                            <td>Phone</td>\r\n                            <td>Edit</td>\r\n                            <td>Delete</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {feed}\r\n                    </tbody>\r\n                </table>\r\n                \r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(ViewRecords);","//Get Today's Date\r\nexport const getToday = () => {\r\n    var today = new Date();\r\n    var dd = today.getDate();\r\n    var mm = today.getMonth() + 1; //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n        dd = \"0\" + dd; //If Date is between 1-9 - Prefix '0' to it\r\n    }\r\n    if (mm < 10) {\r\n        mm = \"0\" + mm; //If Month is between 1-9 - Prefix '0' to it\r\n    }\r\n    today = yyyy + \"-\" + mm + \"-\" + dd;\r\n    return today;\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as firebase from 'firebase';\r\nimport { getToday } from '../Utils/utilityFunctions';\r\nimport './home.css';\r\nclass Home extends Component {\r\n    state = { \r\n        count: 0\r\n    }\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.audioRef = React.createRef();\r\n    }\r\n    // componentDidMount()\r\n    // {\r\n    //     this.getNotificationCount();\r\n    // }\r\n\r\n   \r\n    getNotificationCount = () => {\r\n       var today = getToday();\r\n        var db = firebase.firestore();\r\n        var recArr =[];\r\n        db.collection(\"installations\").where(\"nextServiceDate\", \"==\", today).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                recArr.push(doc.data());\r\n                this.setState(\r\n                    ()=> { return {count: recArr.length}},\r\n                    ()=> { this.playNotificationSound(recArr.length)}\r\n                );\r\n            });\r\n        });\r\n        // this.playNotificationSound();\r\n    }\r\n\r\n    playNotificationSound = (count) => {\r\n        if(count > 0)\r\n        {\r\n            this.audioRef.current.play();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"dashboardform\">\r\n                <h2>Welcome to Naveen's DB</h2>\r\n                    <p><Link  to=\"/addrecords\"><button className=\"link\">Add Records</button></Link> </p>\r\n                    <p><Link  to=\"/viewrecords\"><button className=\"link\">View Records</button></Link></p> \r\n                    <p><Link  to=\"/notifications\"><button className=\"link\">Notifications ({this.state.count})</button></Link> </p>\r\n                   <p> <a href=\"##\" onClick={this.getNotificationCount}><button className=\"link\">Refresh</button></a></p>\r\n                <audio  webkit-playsinline=\"true\" playsInline={true}  ref={this.audioRef} id=\"notificationSound\" src=\"https://notificationsounds.com/soundfiles/b2f627fff19fda463cb386442eac2b3d/file-sounds-1142-inflicted.mp3\" />\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home;","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\n\r\nclass Notification extends Component {\r\n  state = {\r\n    recordsPresent: false,\r\n    records: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    var today = getToday();\r\n    var db = firebase.firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          recArr.push(doc.data());\r\n        });\r\n        this.setState(\r\n          () => {\r\n            return {\r\n              records: recArr,\r\n              recordsPresent: true,\r\n              count: recArr.length,\r\n            };\r\n          },\r\n          () => {}\r\n        );\r\n      });\r\n  };\r\n  render() {\r\n    const recordMapper = this.state.records.map((item, index) => (\r\n      <tr key={index}>\r\n        <td>{item.custName}</td>\r\n        <td>{item.plantInstalled}</td>\r\n        <td>{item.dateOfInstallment}</td>\r\n        <td>{item.nextServiceDate}</td>\r\n        <td>{item.custAddress}</td>\r\n        <td>{item.custPhone}</td>\r\n      </tr>\r\n    ));\r\n    const feed =\r\n      this.state.recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <tr>\r\n          <td>Loading</td>\r\n        </tr>\r\n      );\r\n    const feed2 =\r\n      this.state.count === 0 ? (\r\n        <tr>\r\n          <td>No Notification</td>\r\n        </tr>\r\n      ) : (\r\n        feed\r\n      );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <p>Notifications ({this.state.count})</p>\r\n        <table id=\"records-table\">\r\n          <thead>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>Plant Installed</td>\r\n              <td>Date of Installment</td>\r\n              <td>Next Service Date</td>\r\n              <td>Address</td>\r\n              <td>Phone</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{feed2}</tbody>\r\n        </table>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    constructor(props) \r\n    {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n    \r\n    static getDerivedStateFromError(error) {\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      console.log(error, errorInfo);\r\n    }\r\n    \r\n    render() {\r\n      if (this.state.hasError) \r\n      {\r\n        return (\r\n            <div className=\"error-block\">\r\n                <p>\r\n                    <span>Something went wrong. </span>\r\n                    <Link to=\"/\">Go To Dashboard</Link> \r\n                </p>\r\n            </div>\r\n        );\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PageNotFound(props)\r\n{\r\n    return(\r\n        <Fragment>\r\n            <div className=\"pagenotfound\">\r\n                <h1> 404 Error. Page Not Found </h1>\r\n                <Link className=\"link\" to={'/dashboard'}>Click Here to go to Dashboard</Link>\r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\r\nimport {Link, withRouter } from 'react-router-dom';\r\nimport * as firebase from 'firebase';\r\n\r\nclass EditRecord extends Component {\r\n    state = { \r\n        name: '', number:'', model: '', address: '', dateofinstallment: '', nextservicedate: ''\r\n     }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.getData();\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        e.persist();\r\n        this.setState(\r\n            ()=> { return { [e.target.name] : e.target.value }}\r\n        );\r\n    }\r\n\r\n    validateInput = () => {\r\n        const { name, number, model, dateofinstallment, nextservicedate, address} = this.state;\r\n        if(name !== null && number !== null && model !== null && dateofinstallment !== null && nextservicedate !== null && address !== null)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addRecord = e => {\r\n        if(this.validateInput())\r\n        {\r\n            if(window.confirm(\"Are you sure to edit?\"))\r\n            {\r\n                var id = this.props.match.params.id;\r\n                console.log(id);\r\n                var db = firebase.firestore();\r\n                db.collection(\"installations\").doc(String(id)).set({\r\n                    custName: this.state.name,\r\n                    custPhone: this.state.number,\r\n                    plantInstalled: this.state.model,\r\n                    dateOfInstallment: this.state.dateofinstallment,\r\n                    nextServiceDate: this.state.nextservicedate,\r\n                    custAddress: this.state.address\r\n                })\r\n                .then(()=> {\r\n                    alert(\"Record Edited Successfully..!\");\r\n                    this.props.history.push('/dashboard');\r\n                    // this.setState(\r\n                    //     ()=> { return { redirect: true}},\r\n                    //     ()=> { }\r\n                    // );\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error Adding Document: \", error);\r\n                });\r\n            } \r\n        }\r\n        return false;  \r\n    }\r\n\r\n    getData = ()=>\r\n    {\r\n        var id = this.props.match.params.id;\r\n        var db = firebase.firestore();\r\n        db.collection(\"installations\").doc(String(id)).get().then((doc) => {\r\n            if (doc.exists) {\r\n                var rec = doc.data();\r\n                this.setState(\r\n                    ()=> { return { \r\n                        name: rec.custName,\r\n                        number: rec.custPhone,\r\n                        model: rec.plantInstalled,\r\n                        address: rec.custAddress,\r\n                        dateofinstallment: rec.dateOfInstallment,\r\n                        nextservicedate: rec.nextServiceDate\r\n                    }},\r\n                    ()=> { }\r\n                );\r\n                // console.log(\"Document data:\", doc.data());\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n                console.log(\"No such document!\");\r\n            }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n            <p>\r\n            <Link  to=\"/dashboard\"><button id=\"home\">{\"< Go To Dashboard\"}</button></Link>\r\n            </p>\r\n            <div className=\"form\">\r\n            <form>\r\n                <h2>Edit Record</h2>\r\n                <p htmlFor=\"name\">Customer Name:</p>\r\n                <input type=\"text\" value={this.state.name} placeholder=\"Customer Name\" onChange={this.handleInputChange} name=\"name\" required/>\r\n                <p htmlFor=\"number\">Customer Contact Number:</p>\r\n                <input type=\"number\" value={this.state.number} placeholder=\"Customer Phone Number\"  onChange={this.handleInputChange} name=\"number\" required/>\r\n                <p htmlFor=\"model\">Plant Installed:</p>\r\n                <input type=\"text\" value={this.state.model} placeholder=\"Plant Model\" onChange={this.handleInputChange} name=\"model\" required/>\r\n                <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n                <input type=\"date\" value={this.state.dateofinstallment} placeholder=\"Date of Installment\" onChange={this.handleInputChange} name=\"dateofinstallment\" required/>\r\n                <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n                <input type=\"date\" value={this.state.nextservicedate} placeholder=\"Next Service Date\" onChange={this.handleInputChange} name=\"nextservicedate\" required/>\r\n                <p htmlFor=\"address\">Customer Address:</p>\r\n                <input type=\"text\" value={this.state.address} placeholder=\"Address\" onChange={this.handleInputChange} name=\"address\" required/>\r\n                <div></div>\r\n                <button type=\"submit\" onClick={this.addRecord}>  Submit</button>\r\n            </form>\r\n        </div>\r\n        </React.Fragment> );\r\n    }\r\n}\r\n \r\nexport default withRouter(EditRecord);","import React, { Fragment, useState} from 'react';\r\nimport {BrowserRouter, Route, Redirect,Switch } from 'react-router-dom';\r\nimport AddRecord from '../AddRecord/addRecord';\r\nimport ViewRecords from '../ViewRecords/viewRecords';\r\nimport Home from '../Home/home';\r\nimport Notifications from '../Notifications/notifications';\r\nimport ErrorBoundary from '../ErrorBoundary/errorboundary';\r\nimport PageNotFound from '../PageNotFound/pagenotfound';\r\nimport EditRecord from '../EditRecord/editRecord';\r\n\r\nconst Routes = () => {\r\n   \r\n    return ( \r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/naveen-db/\" render={ ()=> <Redirect to=\"/dashboard\" />} />\r\n                <Route exact path=\"/\" render={ ()=> <Redirect to=\"/dashboard\" />} />\r\n                <Route exact path=\"/dashboard\" render={ ()=> <Home />} />\r\n                <Route exact path=\"/addrecords\" render={ ()=> <AddRecord />} />\r\n                <Route exact path=\"/notifications\" render={ ()=> <Notifications />} />\r\n                <Route exact path=\"/viewrecords\" render={ ()=> <ViewRecords />} /> \r\n                <Route exact path=\"/editrecord/:id\" render={ ()=> <EditRecord />}  />\r\n                <Route\r\n                      render={\r\n                        () =>\r\n                          <Fragment>\r\n                            <ErrorBoundary>\r\n                              <PageNotFound />\r\n                            </ErrorBoundary>\r\n                          </Fragment>\r\n                      }\r\n                    />\r\n            </Switch>\r\n        </BrowserRouter>\r\n     );\r\n}\r\n \r\nexport default Routes;","import React, { Component } from 'react';\r\nimport AddRecord from '../AddRecord/addRecord';\r\nimport Routes from '../Routes/routes';\r\n\r\nclass App extends Component {\r\n    state = {  }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"App\">\r\n            <Routes/>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/app';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCmGN1TXfG9dTYXx80HvckdQkJpE9nTLXY\",\n  authDomain: \"naveen-s-db.firebaseapp.com\",\n  databaseURL: \"https://naveen-s-db.firebaseio.com\",\n  projectId: \"naveen-s-db\",\n  storageBucket: \"naveen-s-db.appspot.com\",\n  messagingSenderId: \"941064666107\",\n  appId: \"1:941064666107:web:17532e787616deadbf695e\",\n  measurementId: \"G-34S1Z2T39Q\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}