{"version":3,"sources":["AddRecord/addRecord.js","ViewRecords/viewRecords.js","Utils/utilityFunctions.js","Home/home.js","Notifications/notifications.js","ErrorBoundary/errorboundary.js","PageNotFound/pagenotfound.js","EditRecord/editRecord.js","Login/login.js","SignIn/signin.js","PasswordReset/passwordreset.js","Routes/routes.js","App/app.js","index.js"],"names":["useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","withRouter","props","classes","useState","name","setName","number","setNumber","model","setModel","dateofinstallment","setDateOfInstallment","nextservicedate","setNextServiceDate","address","setAddress","useEffect","getCurrentUser","console","log","e","firebase","auth","onAuthStateChanged","user","undefined","history","push","handleInputChange","persist","target","value","className","to","Button","color","variant","TextField","type","onChange","label","required","onClick","preventDefault","window","confirm","firestore","collection","add","custName","custPhone","plantInstalled","dateOfInstallment","nextServiceDate","custAddress","then","alert","catch","error","table","minWidth","maxHeight","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","root","TableRow","records","setRecords","recordsPresent","setRecordsPresent","searchBox","setSearchBox","searchOn","setSearchOn","searchRecords","setSearchRecords","getData","db","recArr","get","querySnapshot","forEach","doc","idObj","id","obj","data","recordMapper","map","item","key","component","scope","align","String","delete","updatedRecords","filter","feed","records1","toLowerCase","search","TableContainer","Paper","Table","stickyHeader","size","aria-label","TableHead","TableBody","getToday","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","useStylesAlert","marginTop","alignContent","textAlign","justifyContent","alignItems","alertClasses","count","setCount","audioRef","useRef","document","createElement","badgeProps","children","playNotificationSound","current","play","Badge","max","badgeContent","where","length","err","a1","find","signOut","Alert","severity","webkit-playsinline","playsInline","ref","src","useStyles2","formControl","margin","selectEmpty","ddclasses","index","FormControl","Select","defaultValue","status","labelId","set","merge","state","updatedRecord","record","pop","updateStatus","MenuItem","feed2","ErrorBoundary","hasError","errorInfo","this","Component","PageNotFound","EditRecord","setState","validateInput","addRecord","match","params","exists","rec","Fragment","htmlFor","placeholder","useStylesBackDrop","backdrop","zIndex","drawer","textfield","classesBackDrop","openBackDrop","setOpenBackDrop","authMessage","setAuthMessage","email","setEmail","pwd","setPwd","signInWithEmailAndPassword","res","code","trim","sendPasswordResetEmail","Backdrop","open","CircularProgress","SignUp","signIn","createUserWithEmailAndPassword","password","message","PasswordReset","Routes","exact","path","render","App","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ba97602.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\r\n// import firebase from 'firebase/app';\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport \"./addrecords.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\n// class AddRecord extends Component\r\nconst AddRecord = (props) => {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState(null);\r\n  const [number, setNumber] = useState(null);\r\n  const [model, setModel] = useState(null);\r\n  const [dateofinstallment, setDateOfInstallment] = useState(null);\r\n  const [nextservicedate, setNextServiceDate] = useState(null);\r\n  const [address, setAddress] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getCurrentUser();\r\n    console.log(\"count\");\r\n  });\r\n\r\n  const getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //To handle Input change // Value typed in input fields being recorded to state variables\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    switch (e.target.name) {\r\n      case \"name\":\r\n        setName(e.target.value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(e.target.value);\r\n        break;\r\n      case \"model\":\r\n        setModel(e.target.value);\r\n        break;\r\n      case \"dateofinstallment\":\r\n        setDateOfInstallment(e.target.value);\r\n        break;\r\n      case \"nextservicedate\":\r\n        setNextServiceDate(e.target.value);\r\n        break;\r\n      case \"address\":\r\n        setAddress(e.target.value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  //Checking whether all required fields are added\r\n  const validateInput = () => {\r\n    if (\r\n      name !== null &&\r\n      number !== null &&\r\n      model !== null &&\r\n      dateofinstallment !== null &&\r\n      nextservicedate !== null &&\r\n      address !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //Add to database\r\n  const addRecord = (e) => {\r\n    e.preventDefault();\r\n    if (validateInput()) {\r\n      if (window.confirm(\"Are you sure you want to add this Record?\")) {\r\n        var db = firestore();\r\n        db.collection(\"installations\")\r\n          .add({\r\n            custName: name,\r\n            custPhone: number,\r\n            plantInstalled: model,\r\n            dateOfInstallment: dateofinstallment,\r\n            nextServiceDate: nextservicedate,\r\n            custAddress: address,\r\n          })\r\n          .then(() => {\r\n            alert(\"Record Added Successfully..!\");\r\n            props.history.push(\"/dashboard\");\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error Adding Document: \", error);\r\n          });\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <p>\r\n        <Link to=\"/dashboard\">\r\n          <Button color=\"secondary\" variant=\"contained\">\r\n            <HomeIcon />\r\n            &nbsp;{\" Go To Dashboard\"}\r\n          </Button>\r\n        </Link>\r\n      </p>\r\n      <form>\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <h2>Add New Record</h2>\r\n        <TextField\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={handleInputChange}\r\n          label=\"Customer Name\"\r\n          required={true}\r\n        />\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <TextField\r\n          name=\"number\"\r\n          type=\"number\"\r\n          onChange={handleInputChange}\r\n          label=\"Customer Phone Number\"\r\n          required={true}\r\n        />\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <TextField\r\n          name=\"model\"\r\n          type=\"text\"\r\n          onChange={handleInputChange}\r\n          label=\"RO Plant Model\"\r\n          required={true}\r\n        />\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <TextField\r\n          className={classes.textField}\r\n          name=\"dateofinstallment\"\r\n          type=\"date\"\r\n          onChange={handleInputChange}\r\n          label=\"Date of Installment\"\r\n          required={true}\r\n        />\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <TextField\r\n          className={classes.textField}\r\n          name=\"nextservicedate\"\r\n          type=\"date\"\r\n          onChange={handleInputChange}\r\n          label=\"Next Service Date\"\r\n          required={true}\r\n        />\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <TextField\r\n          name=\"address\"\r\n          type=\"text\"\r\n          onChange={handleInputChange}\r\n          label=\"Customer Address\"\r\n          required={true}\r\n        />\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <div>\r\n          <div></div>&nbsp;\r\n        </div>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={addRecord}\r\n        >\r\n          Add New Record &nbsp; <SaveIcon />\r\n        </Button>\r\n      </form>\r\n      <div>\r\n        {\" \"}\r\n        <div>&nbsp;</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(AddRecord);","import React, { Component, Fragment, useEffect, useState } from \"react\";\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport \"./viewRecords.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\n//Table \r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n//Material Ui\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  container: {\r\n    maxHeight: 500,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: \"#8ECDCC\",\r\n    },\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: \"#CD8EBF\",\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst ViewRecords = (props) => {\r\n  const classes = useStyles();\r\n  const [records, setRecords] = useState([]);\r\n  const [recordsPresent, setRecordsPresent] = useState(false);\r\n  const [searchBox, setSearchBox] = useState(\"\");\r\n  const [searchOn, setSearchOn] = useState(false);\r\n  const [searchRecords, setSearchRecords]= useState([]);\r\n\r\n  useEffect( ()=> {\r\n    getCurrentUser();\r\n    getData();\r\n  }, [])\r\n\r\n  const getCurrentUser = () => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //Get all records of installations\r\n  const getData = () => {\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        setRecords(recArr);\r\n        setRecordsPresent(true);\r\n      });\r\n  };\r\n\r\n  //Search based on Customer Name Column\r\n  const search = (e) => {\r\n    setSearchOn(true);\r\n    var records1 = records.filter((item) => {\r\n      return (\r\n        String(item.custName)\r\n          .toLowerCase()\r\n          .search(String(searchBox).toLowerCase()) !== -1\r\n      );\r\n    });\r\n    setSearchRecords(records1);\r\n  };\r\n\r\n  //For storing text from search box\r\n  const handleSearchBox = (e) => {\r\n    e.persist();\r\n    setSearchBox(e.target.value);\r\n  };\r\n\r\n  //Resetting the Records table and Search Box\r\n  const handleReset = (e) => {\r\n    setSearchOn(false);\r\n    setSearchBox(\"\");\r\n  };\r\n\r\n  //Moving to Edit page and having Record id as Route parameter\r\n  const editRecord = (id) => {\r\n    props.history.push(\"/editrecord/\" + id);\r\n  };\r\n\r\n  //Deleting the Record on del button click\r\n  const deleteRecord = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      var db = firestore();\r\n      //Delete From DB\r\n      db.collection(\"installations\")\r\n        .doc(String(id))\r\n        .delete()\r\n        .then(() => {\r\n          alert(\"Record Deleted Successfully\");\r\n          //Delete from records Array\r\n          var updatedRecords = records.filter(\r\n            (item) => item.id !== id\r\n          );\r\n          setRecords(updatedRecords);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const dispRecords =\r\n      searchOn === true\r\n        ? searchRecords\r\n        : records;\r\n  const recordMapper = dispRecords.map((item) => (\r\n    <StyledTableRow key={item.id}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">{ item.custName}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{item.plantInstalled}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{item.dateOfInstallment}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{item.nextServiceDate}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{item.custAddress}</StyledTableCell>\r\n        <StyledTableCell align=\"right\">{item.custPhone}</StyledTableCell>\r\n        <StyledTableCell onClick={() => editRecord(item.id)} align=\"right\"><EditIcon /></StyledTableCell>\r\n        <StyledTableCell onClick={() => deleteRecord(item.id)} align=\"right\"><DeleteIcon /></StyledTableCell>\r\n    </StyledTableRow>\r\n  ));\r\n\r\n  const feed =\r\n      recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <TableRow>\r\n          <TableCell>Loading</TableCell>\r\n        </TableRow>\r\n      );\r\n    return (\r\n      <div className=\"login-form\">\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n          <Button color=\"secondary\" variant=\"contained\"><HomeIcon />&nbsp;{\" Go To Dashboard\"}</Button>\r\n          </Link>\r\n        </p>\r\n        <h2 id=\"title\">Viewing All Records</h2>\r\n        <TextField value={searchBox} label=\"Search any record\" type=\"text\" name=\"searchbox\" onChange={handleSearchBox} /> &nbsp; &nbsp;\r\n        <Button color=\"primary\" variant=\"contained\" type=\"button\" onClick={search}><SearchIcon /></Button>&nbsp; {\"  \"}{\" \"}\r\n        <Button color=\"primary\" variant=\"contained\" type=\"button\" onClick={handleReset}><RefreshIcon /></Button>\r\n        <div><div>&nbsp;</div></div>\r\n        <div><div>&nbsp;</div></div>\r\n        <TableContainer className={classes.container} component={Paper}>\r\n          <Table className={classes.table} stickyHeader size=\"small\" aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"right\">Name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Plant Installed</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Date of Installment</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Next Service Date</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Address</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Phone</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Edit</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Delete</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {feed}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\nexport default withRouter(ViewRecords);","//Get Today's Date\r\nexport const getToday = () => {\r\n  var today = new Date();\r\n  var dd = today.getDate();\r\n  var mm = today.getMonth() + 1; //January is 0!\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd; //If Date is between 1-9 - Prefix '0' to it\r\n  }\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm; //If Month is between 1-9 - Prefix '0' to it\r\n  }\r\n  today = yyyy + \"-\" + mm + \"-\" + dd;\r\n  return today;\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { firestore } from \"firebase\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\nimport \"./home.css\";\r\nimport firebase from \"firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//Notification Badge\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStylesAlert = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n      alignContent: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Home = (props) => {\r\n  const alertClasses = useStylesAlert();\r\n  const [count, setCount] = useState(0);\r\n  const [records, setRecords] = useState([]);\r\n  const [recordsPresent, setRecordsPresent] = useState(false);\r\n  const audioRef = useRef(document.createElement(\"audio\"));\r\n\r\n  const badgeProps = {\r\n    color: \"secondary\",\r\n    children: <NotificationsIcon />,\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentUser();\r\n  }, []);\r\n\r\n  const getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //For Getting the notification Count on Refresh button click\r\n  const getNotificationCount = () => {\r\n    var today = getToday();\r\n    var db = firestore();\r\n    var recArr = [];\r\n    //Getting records with today as their Next service Date\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        setRecords(recArr);\r\n        setRecordsPresent(true);\r\n        setCount(recArr.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // Getting Pending Service Records and adding them to above Array\r\n    db.collection(\"installations\")\r\n      .where(\"status\", \"==\", \"pending\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          var a1 = recArr.find((item) => item.id === idObj.id);\r\n          if (a1 === null || a1 === undefined) {\r\n            recArr.push(obj);\r\n          }\r\n        });\r\n        setRecords(recArr);\r\n        setRecordsPresent(true);\r\n        setCount(recArr.length);\r\n        playNotificationSound(recArr.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //For Playing Notification Sound\r\n  const playNotificationSound = (count) => {\r\n    if (count > 0) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  const logoutUser = (e) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        props.history.push(\"/login\"); //Move to Login Route on Logout\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboardform\">\r\n      <h2>Welcome to Naveen's DB</h2>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <p>\r\n        <Link to=\"/addrecords\">\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n          >\r\n            Add Records\r\n          </Button>\r\n        </Link>{\" \"}\r\n      </p>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <p>\r\n        <Link to=\"/viewrecords\">\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n          >\r\n            View Records\r\n          </Button>\r\n        </Link>\r\n      </p>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <p>\r\n        <Link to=\"/notifications\">\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"button\"\r\n          >\r\n            Notifications &nbsp;{\" \"}\r\n            <Badge\r\n              max={10}\r\n              color=\"secondary\"\r\n              badgeContent={count}\r\n              {...badgeProps}\r\n            ></Badge>\r\n          </Button>\r\n        </Link>{\" \"}\r\n      </p>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <p>\r\n        {\" \"}\r\n        <Button\r\n          onClick={getNotificationCount}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"button\"\r\n        >\r\n          Refresh\r\n        </Button>\r\n      </p>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <p>\r\n        <Button\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={logoutUser}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </p>\r\n      <div>\r\n        <div>&nbsp;</div>\r\n      </div>\r\n      <div className={alertClasses.root}>\r\n        <Alert severity=\"info\">\r\n          Click on Refresh button to get Notifications\r\n        </Alert>\r\n      </div>\r\n      <audio\r\n        webkit-playsinline=\"true\"\r\n        playsInline={true}\r\n        ref={audioRef}\r\n        id=\"notificationSound\"\r\n        src=\"https://notificationsounds.com/soundfiles/acc3e0404646c57502b480dc052c4fe1/file-sounds-1140-just-saying.mp3\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default withRouter(Home);","import React, { Component, useState, useEffect } from \"react\";\r\n// import * as firebase from \"firebase\";\r\nimport { firestore } from \"firebase\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { getToday } from \"../Utils/utilityFunctions\";\r\nimport firebase from \"firebase\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport './notifications.css';\r\n//Table \r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n//Drop Down\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n//Notification Badge\r\nimport Badge from '@material-ui/core/Badge';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: \"#8ECDCC\",\r\n    },\r\n    '&:nth-of-type(even)': {\r\n      backgroundColor: \"#CD8EBF\",\r\n    },\r\n  },\r\n}))(TableRow);\r\nconst Notification = (props) => {\r\n  const classes = useStyles();\r\n  const ddclasses = useStyles2();\r\n\r\n  const [recordsPresent, setRecordsPresent] = useState(false);\r\n  const [records, setRecords] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    getCurrentUser(); //to verify authentication\r\n    getData(); //Get notificationd data from db\r\n  });\r\n  \r\n  const getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const getData = () => {\r\n    var today = getToday();\r\n    var db = firestore();\r\n    var recArr = [];\r\n    db.collection(\"installations\")\r\n      .where(\"nextServiceDate\", \"==\", today)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          recArr.push(obj);\r\n        });\r\n        setRecordsPresent(true); setRecords(recArr); setCount(recArr.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    db.collection(\"installations\")\r\n      .where(\"status\", \"==\", \"pending\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          const idObj = { id: doc.id };\r\n          const obj = { ...idObj, ...doc.data() };\r\n          var a1 = recArr.find((item) => item.id === idObj.id);\r\n          if (a1 === null || a1 === undefined) {\r\n            recArr.push(obj);\r\n          }\r\n        });\r\n        setRecordsPresent(true); setRecords(recArr); setCount(recArr.length);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // Status update - pending and completed - store changes to db\r\n  const updateStatus = (id, value) => {\r\n    var db = firestore();\r\n    if (window.confirm(\"Are you sure to Change?\")) {\r\n      db.collection(\"installations\")\r\n        .doc(String(id))\r\n        .set(\r\n          {\r\n            status: value,\r\n          },\r\n          { merge: true }\r\n        )\r\n        .then(() => {\r\n          var records = this.state.records;\r\n          var updatedRecord = this.state.records.find(\r\n            (record) => record.id === id\r\n          );\r\n          records.pop(updatedRecord);\r\n          updatedRecord.status = value;\r\n          records.push(updatedRecord);\r\n          setRecordsPresent(true); setRecords(records); setCount(records.length);\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error Adding Document: \", error);\r\n        });\r\n    }\r\n  };\r\n\r\n    const recordMapper = records.map((item, index) => (\r\n      <StyledTableRow key={index}>\r\n        <StyledTableCell>{item.custName}</StyledTableCell>\r\n        <StyledTableCell>{item.plantInstalled}</StyledTableCell>\r\n        <StyledTableCell>{item.dateOfInstallment}</StyledTableCell>\r\n        <StyledTableCell>{item.nextServiceDate}</StyledTableCell>\r\n        <StyledTableCell>{item.custAddress}</StyledTableCell>\r\n        <StyledTableCell>{item.custPhone}</StyledTableCell>\r\n        <StyledTableCell>\r\n          <FormControl className={ddclasses.formControl}>\r\n            <Select\r\n              defaultValue={\"pending\"}\r\n              value={item.status}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              onChange={(e) => updateStatus(item.id, e.target.value)}\r\n            >\r\n              <MenuItem value=\"pending\">Pending</MenuItem>\r\n              <MenuItem value=\"completed\">Completed</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </StyledTableCell>\r\n      </StyledTableRow>\r\n    ));\r\n    const feed =\r\n      recordsPresent === true ? (\r\n        recordMapper\r\n      ) : (\r\n        <StyledTableRow>\r\n          <StyledTableCell>Loading</StyledTableCell>\r\n        </StyledTableRow>\r\n      );\r\n    const feed2 =\r\n      count === 0 ? (\r\n        <tr>\r\n          <td>No Notification</td>\r\n        </tr>\r\n      ) : (\r\n        feed\r\n      );\r\n\r\n      const badgeProps = {\r\n        color: 'secondary',\r\n        children: <NotificationsIcon />,\r\n      };\r\n\r\n    return (\r\n      <div className=\"login-form\">\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n          <Button color=\"secondary\" variant=\"contained\"><HomeIcon />&nbsp;{\" Go To Dashboard\"}</Button>\r\n          </Link>\r\n        </p>\r\n        <h2>Notifications <Badge color=\"secondary\" badgeContent={count} {...badgeProps}></Badge></h2>\r\n        <TableContainer className={classes.container} component={Paper}>\r\n          <Table className={classes.table} stickyHeader size=\"small\" aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell align=\"right\">Name</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Plant Installed</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Date of Installment</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Next Service Date</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Address</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Phone</StyledTableCell>\r\n                <StyledTableCell align=\"right\">Status</StyledTableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n          <TableBody>\r\n            {feed2}\r\n          </TableBody>\r\n          </Table>\r\n          </TableContainer>\r\n      </div>\r\n    );\r\n}\r\nexport default withRouter(Notification);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"error-block\">\r\n          <p>\r\n            <span>Something went wrong. </span>\r\n            <Link to=\"/\">Go To Dashboard</Link>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PageNotFound(props) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"pagenotfound\">\r\n        <h1> 404 Error. Page Not Found </h1>\r\n        <Link className=\"link\" to={\"/dashboard\"}>\r\n          Click Here to go to Dashboard\r\n        </Link>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n// import * as firebase from 'firebase';\r\nimport { firestore } from \"firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nclass EditRecord extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    model: \"\",\r\n    address: \"\",\r\n    dateofinstallment: \"\",\r\n    nextservicedate: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCurrentUser();\r\n    this.getData();\r\n  }\r\n\r\n  getCurrentUser = (e) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user === null || user === undefined) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n  //Saving values from input fields\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(() => {\r\n      return { [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n  // Checking all required fields are filled\r\n  validateInput = () => {\r\n    const {\r\n      name,\r\n      number,\r\n      model,\r\n      dateofinstallment,\r\n      nextservicedate,\r\n      address,\r\n    } = this.state;\r\n    if (\r\n      name !== null &&\r\n      number !== null &&\r\n      model !== null &&\r\n      dateofinstallment !== null &&\r\n      nextservicedate !== null &&\r\n      address !== null\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //Add the edited record to the Database\r\n  addRecord = (e) => {\r\n    e.preventDefault();\r\n    if (this.validateInput()) {\r\n      if (window.confirm(\"Are you sure to edit?\")) {\r\n        var id = this.props.match.params.id;\r\n        var db = firestore();\r\n        db.collection(\"installations\")\r\n          .doc(String(id))\r\n          .set({\r\n            custName: this.state.name,\r\n            custPhone: this.state.number,\r\n            plantInstalled: this.state.model,\r\n            dateOfInstallment: this.state.dateofinstallment,\r\n            nextServiceDate: this.state.nextservicedate,\r\n            custAddress: this.state.address,\r\n          })\r\n          .then(() => {\r\n            alert(\"Record Edited Successfully..!\");\r\n            this.props.history.push(\"/dashboard\");\r\n          })\r\n          .catch(function (error) {\r\n            console.error(\"Error Adding Document: \", error);\r\n          });\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  //Get record data based on Id from Firestore\r\n  getData = () => {\r\n    var id = this.props.match.params.id;\r\n    var db = firestore();\r\n    db.collection(\"installations\")\r\n      .doc(String(id))\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          var rec = doc.data();\r\n          this.setState(\r\n            () => {\r\n              return {\r\n                name: rec.custName,\r\n                number: rec.custPhone,\r\n                model: rec.plantInstalled,\r\n                address: rec.custAddress,\r\n                dateofinstallment: rec.dateOfInstallment,\r\n                nextservicedate: rec.nextServiceDate,\r\n              };\r\n            },\r\n            () => {}\r\n          );\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <p>\r\n          <Link to=\"/dashboard\">\r\n            <button id=\"home\">{\"< Go To Dashboard\"}</button>\r\n          </Link>\r\n        </p>\r\n        <div className=\"form\">\r\n          <form>\r\n            <h2>Edit Record</h2>\r\n            <p htmlFor=\"name\">Customer Name:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              placeholder=\"Customer Name\"\r\n              onChange={this.handleInputChange}\r\n              name=\"name\"\r\n              required\r\n            />\r\n            <p htmlFor=\"number\">Customer Contact Number:</p>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.number}\r\n              placeholder=\"Customer Phone Number\"\r\n              onChange={this.handleInputChange}\r\n              name=\"number\"\r\n              required\r\n            />\r\n            <p htmlFor=\"model\">Plant Installed:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.model}\r\n              placeholder=\"Plant Model\"\r\n              onChange={this.handleInputChange}\r\n              name=\"model\"\r\n              required\r\n            />\r\n            <p htmlFor=\"dateofinstallment\">Date of Installment:</p>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.dateofinstallment}\r\n              placeholder=\"Date of Installment\"\r\n              onChange={this.handleInputChange}\r\n              name=\"dateofinstallment\"\r\n              required\r\n            />\r\n            <p htmlFor=\"nextservicedate\">Next Service Date:</p>\r\n            <input\r\n              type=\"date\"\r\n              value={this.state.nextservicedate}\r\n              placeholder=\"Next Service Date\"\r\n              onChange={this.handleInputChange}\r\n              name=\"nextservicedate\"\r\n              required\r\n            />\r\n            <p htmlFor=\"address\">Customer Address:</p>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.address}\r\n              placeholder=\"Address\"\r\n              onChange={this.handleInputChange}\r\n              name=\"address\"\r\n              required\r\n            />\r\n            <div></div>\r\n            <button type=\"submit\" onClick={this.addRecord}>\r\n              {\" \"}\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(EditRecord);","import React, { Component, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./login.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStylesBackDrop = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textfield: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const classesBackDrop = useStylesBackDrop();\r\n  const [openBackDrop, setOpenBackDrop] = useState(false);\r\n  const [authMessage, setAuthMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pwd, setPwd] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    e.persist();\r\n    if (e.target.name === \"email\") {\r\n      setEmail(e.target.value);\r\n    } else {\r\n      setPwd(e.target.value);\r\n    }\r\n  };\r\n\r\n  const closeBackDrop = (e) => {\r\n    setOpenBackDrop(false);\r\n  };\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    setOpenBackDrop(true);\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pwd)\r\n      .then((res) => {\r\n        props.history.push(\"/dashboard\");\r\n      })\r\n      .catch((err) => {\r\n        setOpenBackDrop(false);\r\n        if (err.code === \"auth/wrong-password\") {\r\n          setAuthMessage(\"The email or Password is incorrect !\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // For getting Password Reset Email - and Move to Password Reset Info Page\r\n  const resetPassword = (e) => {\r\n    if (String(email).trim() === \"\") {\r\n      alert(\"Enter email address and then click Forgot Password Link\");\r\n    } else {\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(email)\r\n        .then((res) => {\r\n          props.history.push(\"/resetpwd\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <h2 className=\"title\">Naveen's Db</h2>\r\n      </div>\r\n      <h3 className=\"title\">Login</h3>\r\n      <div className=\"login-form\">\r\n        <form className={classes.textfield}>\r\n          <small className=\"err\">{authMessage}</small>\r\n          <TextField\r\n            type=\"email\"\r\n            onChange={handleInputChange}\r\n            required={true}\r\n            name=\"email\"\r\n            id=\"standard-basic\"\r\n            label=\"Email Address\"\r\n          />\r\n          <div>\r\n            <div></div>&nbsp;\r\n          </div>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <TextField\r\n            type=\"password\"\r\n            onChange={handleInputChange}\r\n            required={true}\r\n            name=\"pwd\"\r\n            id=\"standard-basic\"\r\n            label=\"Password\"\r\n          />\r\n          <div>\r\n            <div></div>&nbsp;\r\n          </div>\r\n          <div></div>\r\n          <Button\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            name=\"submit\"\r\n            onClick={login}\r\n          >\r\n            Login Now\r\n          </Button>\r\n          <div>\r\n            <div></div>&nbsp;\r\n          </div>\r\n          <div>\r\n            <div></div>&nbsp;\r\n          </div>\r\n          <p className=\"red stmt login-form\">\r\n            Forgot Password?{\" \"}\r\n            <span onClick={resetPassword}>\r\n              <u>Click Here</u>\r\n            </span>\r\n          </p>\r\n        </form>\r\n      </div>\r\n      <Backdrop\r\n        className={classesBackDrop.backdrop}\r\n        open={openBackDrop}\r\n        onClick={closeBackDrop}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default withRouter(Login);","import React, { Component } from \"react\";\r\n// import * as firebase from 'firebase/auth';\r\nimport firebase from \"firebase\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport \"./signin.css\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    authMessage: \"\",\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    e.persist();\r\n    this.setState(\r\n      () => {\r\n        return { [e.target.name]: e.target.value };\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  signIn = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((res) => {\r\n        alert(\"Account Created Successfully ! Please Login Now\");\r\n        this.props.history.push(\"/login\");\r\n      })\r\n      .catch((err) => {\r\n        this.setState(() => {\r\n          return { authMessage: err.message };\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <h2 className=\"title\">Naveen's Db</h2>\r\n        </div>\r\n        <h3 className=\"title\">Sign Up</h3>\r\n        <div className=\"form\">\r\n          <form>\r\n            <small id=\"err\">{this.state.authMessage}</small>\r\n            <p htmlFor=\"email\">Email</p>\r\n            <input\r\n              placeholder=\"eg., xxx@example.com\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n            <p htmlFor=\"password\">Password</p>\r\n            <input\r\n              placeholder=\"Must be atleast 8 characters\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={this.handleInputChange}\r\n              required\r\n            />\r\n            <button type=\"submit\" name=\"submit\" onClick={this.signIn}>\r\n              Sign In\r\n            </button>\r\n          </form>\r\n          <p>\r\n            Already have an account?{\" \"}\r\n            <Link to=\"/login\">\r\n              <u>Login here</u>\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(SignUp);","import React from 'react';\r\nimport './pwdreset.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst PasswordReset = (props) => {\r\n    return ( \r\n        <div id=\"pwdreset\">\r\n            <h2>Password Reset</h2>\r\n            <p>Hi User, Please check your Mail Inbox for Password Reset Link</p>\r\n            <small>Note: It might take a minute or two to send password reset mail. Please be patient for the time being.</small>\r\n            <small> Once you reset the Password, <Link to=\"/login\"><u>Click here</u></Link></small>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default PasswordReset;","import React, { Fragment } from \"react\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport AddRecord from \"../AddRecord/addRecord\";\r\nimport ViewRecords from \"../ViewRecords/viewRecords\";\r\nimport Home from \"../Home/home\";\r\nimport Notifications from \"../Notifications/notifications\";\r\nimport ErrorBoundary from \"../ErrorBoundary/errorboundary\";\r\nimport PageNotFound from \"../PageNotFound/pagenotfound\";\r\nimport EditRecord from \"../EditRecord/editRecord\";\r\nimport Login from \"../Login/login\";\r\nimport SignUp from \"../SignIn/signin\";\r\nimport PasswordReset from '../PasswordReset/passwordreset';\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/naveen-db/\"\r\n          render={() => <Redirect to=\"/login\" />}\r\n        />\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\r\n        <Route exact path=\"/login\" render={ ()=> <Login />} />\r\n        <Route exact path=\"/signup\" render={ ()=> <SignUp />} />\r\n        <Route exact path=\"/dashboard\" render={() => <Home />} />\r\n        <Route exact path=\"/addrecords\" render={() => <AddRecord />} />\r\n        <Route exact path=\"/notifications\" render={() => <Notifications />} />\r\n        <Route exact path=\"/viewrecords\" render={() => <ViewRecords />} />\r\n        <Route exact path=\"/editrecord/:id\" render={() => <EditRecord />} />\r\n        <Route exact path=\"/resetpwd\" render={() => <PasswordReset />} />\r\n        <Route\r\n          render={() => (\r\n            <Fragment>\r\n              <ErrorBoundary>\r\n                <PageNotFound />\r\n              </ErrorBoundary>\r\n            </Fragment>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport Routes from \"../Routes/routes\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Routes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/App/app\";\n// import * as firebase from \"firebase\";\nimport firebase from 'firebase/app';\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCmGN1TXfG9dTYXx80HvckdQkJpE9nTLXY\",\n  authDomain: \"naveen-s-db.firebaseapp.com\",\n  databaseURL: \"https://naveen-s-db.firebaseio.com\",\n  projectId: \"naveen-s-db\",\n  storageBucket: \"naveen-s-db.appspot.com\",\n  messagingSenderId: \"941064666107\",\n  appId: \"1:941064666107:web:17532e787616deadbf695e\",\n  measurementId: \"G-34S1Z2T39Q\",\n};\nfirebase.initializeApp(firebaseConfig);\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}